let forceUpdateList=[];const reRender=()=>{requestAnimationFrame(()=>{for(let{component:e,resolve:t}of forceUpdateList)e&&e.forceUpdate&&e.forceUpdate(t);forceUpdateList=[]})},RCheatState=(e,t,o)=>{let n={},r=e,a={};function c(e){return r!=e?(r=e,new Promise(e=>{for(let t in n){let o=forceUpdateList.filter(e=>e.component_key==t)[0];o?a[o.component_key].push(e):(a[t]=a[t]||[e],forceUpdateList.push({component_key:t,component:n[t],resolve(){for(let e of a[t])e(r)}}))}reRender()})):new Promise(e=>e(r))}let p="function"==typeof t&&t(c);function l(e){if(n[e.___rcheat_component_key])throw new Error("component already inited.");return Object.defineProperty(e,"___rcheat_component_key",{value:Math.random(),writable:!1}),n[e.___rcheat_component_key]=e,o?{set:e=>c(e),get:()=>r}:{get:()=>r}}return all_components.push({components:n,onDelete:function(){0==Object.keys(n).length&&"function"==typeof p&&p()}}),l.set=(e=>c(e)),l.get=(()=>r),l};let all_components=[];function RCheatUnmount(e){for(let{components:t,onDelete:o}of all_components)t[e.___rcheat_component_key]&&(delete t[e.___rcheat_component_key],o())}export const readable=(e,t)=>RCheatState(e,t,!1);export const writable=(e,t)=>RCheatState(e,t,!0);export const unmount=e=>RCheatUnmount(e);const RCS={readable:readable,writable:writable,unmount:unmount};export default RCS;